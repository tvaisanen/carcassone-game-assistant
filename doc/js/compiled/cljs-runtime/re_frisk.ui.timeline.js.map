{"version":3,"sources":["re_frisk/ui/timeline.cljs"],"mappings":"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","names":["re-frisk.ui.timeline/timeout","cljs.core.atom","re-frisk.ui.timeline/change-zoom","tool-state","inc?","curr","cljs.core/deref","or__4223__auto__","cljs.core/not","and__4221__auto__","p1__39179#","cljs.core.swap_BANG_","cljs.core/update","temp__5753__auto__","indx","cljs.core.get_in","js/clearTimeout","cljs.core/reset!","js/setTimeout","re-frisk.utils/scroll-timeline-event-item","re-frisk.ui.timeline/buttons","re-frisk.ui.components.components/small-button","re-frisk.ui.timeline/timeline","re-frame-data","re-frisk.inlined-deps.reagent.v1v0v0.reagent.ratom/make-reaction","mult","selected","cljs.core.doall","p1__39181#","cljs.core.map","cljs.core.assoc","cljs.core._EQ_","width","devi","events","all-time","cljs.core/last","cljs.core/first","iter__4622__auto__","s__39183","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__4620__auto__","size__4621__auto__","cljs.core/count","b__39185","cljs.core/chunk-buffer","i__39184","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__39182","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","x","cljs.core.range","s__39199","b__39201","i__39200","map__39206","cljs.core/--destructure-map","cljs.core.get","iter__39198","map__39211","color","position","item","event","cljs.core/assoc","re-frisk.utils/scroll-event-list-item","re-frisk.ui.timeline/timeline-visibility","cljs.core/chunk-first"],"sourcesContent":["(ns re-frisk.ui.timeline\n  (:require-macros [re-frisk.inlined-deps.reagent.v1v0v0.reagent.ratom :refer [reaction]])\n  (:require [re-frisk.ui.components.components :as components]\n            [re-frisk.utils :as utils]))\n\n(def timeout (atom nil))\n\n(defn change-zoom [tool-state inc?]\n  (let [curr (:timeline-zoom @tool-state)]\n    (when (or (and (not inc?) (>= curr 0.05))\n              (and inc? (< curr 12)))\n      (swap! tool-state update :timeline-zoom\n             #(if inc?\n                (+ % (if (< curr 0.1) 0.01 curr))\n                (- % (if (<= curr 0.1) 0.01 (/ curr 2)))))\n      (when-let [indx (get-in @tool-state [:selected-event :indx])]\n        (when @timeout (js/clearTimeout @timeout))\n        (reset! timeout (js/setTimeout #(utils/scroll-timeline-event-item (:doc @tool-state) indx) 500))))))\n\n(defn buttons [tool-state]\n  [:div {:style {:position :absolute :top 70 :left 0}}\n   [:div {:style {:display :flex :flex-direction :row}}\n    [components/small-button {:on-click #(change-zoom tool-state false)} \"-\"]\n    [:div {:style {:width 5}}]\n    [components/small-button {:on-click #(change-zoom tool-state true)} \"+\"]]])\n\n(defn timeline [re-frame-data tool-state]\n  (let [indx     (reaction (get-in @tool-state [:selected-event :indx]))\n        mult     (reaction (:timeline-zoom @tool-state))\n        selected (reaction (doall (map #(assoc % :selected? (= @indx (:indx %))\n                                                 :width (let [width (* (:duration %) @mult)]\n                                                          (int (if (< width 2) 2 width)))\n                                                 :color (if (= @indx (:indx %))\n                                                          \"#df691a\"\n                                                          (if (= (:op-type %) :event) :blue \"#219653\")))\n                                       @(:events re-frame-data))))]\n    (fn []\n      (let [mult     @mult\n            devi     (/ 200 mult)\n            events   @selected\n            all-time (int (+ (- (:end (last events)) (:start (first events))) devi))]\n        [:div {:style {:height           100 :width \"100%\" :overflow-x :auto :overflow-y :hidden\n                       :background-color \"#f3f3f3\" :max-height 100}}\n         [:div {:style {:display  :flex :flex-direction :row :width \"100%\" :height 100\n                        :position :relative :overflow-x :auto}}\n          (for [x (range (int (/ all-time devi)))]\n            ^{:key (str \"timelime-time-item\" x)}\n            [:div {:style {:width             (* devi mult) :min-width (* devi mult) :height 90\n                           :border-left-width 1 :border-left-color :gray :border-left-style :solid\n                           :color             :gray :font-size 10}}\n             (str (int (* x devi)) \" ms\")])\n          (for [{:keys [indx color width position] :as item} events]\n            ^{:key (str \"timeline-event-item\" indx)}\n            [:div {:id    (str \"timeline-event-item\" indx)\n                   :on-click (fn [event]\n                               (swap! tool-state assoc :selected-event item)\n                               (utils/scroll-event-list-item (:doc @tool-state) indx)\n                               (.preventDefault event))\n                   :style {:left   (int (* position mult)) :position :absolute :width width :min-width width\n                           :top    20\n                           :height 70 :background-color color :opacity 0.5}}])]\n         [buttons tool-state]]))))\n\n(defn timeline-visibility [re-frame-data tool-state]\n  (fn []\n    (when (:timeline-opened? @tool-state)\n      [timeline re-frame-data tool-state])))"]}