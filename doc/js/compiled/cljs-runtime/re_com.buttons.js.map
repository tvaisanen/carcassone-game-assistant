{"version":3,"sources":["re_com/buttons.cljs"],"mappings":"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","names":["re-com.buttons/button-args-desc","re-com.validate/string-or-hiccup?","cljs.core/fn?","re-com.validate/position?","re-com.validate/position-options-list","cljs.core/string?","re-com.validate/css-style?","re-com.validate/html-attr?","re-com.buttons/button","showing?","reagent.core.atom","p__34199","map__34202","cljs.core/--destructure-map","cljs.core.get","js/Error","label","on-click","tooltip","tooltip-position","disabled?","class","style","attr","args","js/goog.DEBUG","re_com.validate.validate_args","re-com.validate/extract-arg-data","cljs.core/reset!","re-com.util/deref-or-value","the-button","cljs.core.merge","re-com.box/flex-child-style","event","and__4221__auto__","cljs.core/not","re-com.box/box","re-com.popover/popover-tooltip","or__4223__auto__","re-com.buttons/md-circle-icon-button-args-desc","re-com.validate/button-size?","re-com.validate/button-sizes-list","re-com.buttons/md-circle-icon-button","p__34232","map__34233","md-icon-name","size","emphasise?","G__34242","cljs.core/Keyword","re-com.buttons/md-icon-button-args-desc","re-com.buttons/md-icon-button","p__34277","map__34278","G__34286","re-com.buttons/info-button-args-desc","re-com.buttons/info-button","p__34292","map__34293","info","position","width","cljs.core.swap_BANG_","re-com.buttons/row-button-args-desc","re-com.buttons/row-button","p__34304","map__34305","mouse-over-row?","re-com.buttons/hyperlink-args-desc","re-com.buttons/hyperlink","p__34314","map__34315","re-com.buttons/hyperlink-href-args-desc","re-com.validate/string-or-atom?","re-com.buttons/hyperlink-href","p__34349","map__34351","href","target"],"sourcesContent":["(ns re-com.buttons\n  (:require-macros [re-com.core :refer [handler-fn]])\n  (:require [re-com.util     :refer [deref-or-value px]]\n            [re-com.validate :refer [position? position-options-list button-size? button-sizes-list\n                                     string-or-hiccup? css-style? html-attr? string-or-atom?] :refer-macros [validate-args-macro]]\n            [re-com.popover  :refer [popover-tooltip]]\n            [re-com.box      :refer [h-box v-box box gap line flex-child-style]]\n            [reagent.core    :as    reagent]))\n\n;; ------------------------------------------------------------------------------------\n;;  Component: button\n;; ------------------------------------------------------------------------------------\n\n(def button-args-desc\n  [{:name :label            :required true                         :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"label for the button\"}\n   {:name :on-click         :required false                        :type \"-> nil\"          :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\n   {:name :tooltip          :required false                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\n   {:name :disabled?        :required false :default false         :type \"boolean | atom\"                                 :description \"if true, the user can't click the button\"}\n   {:name :class            :required false                        :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated (applies to the button, not the wrapping div)\"}\n   {:name :style            :required false                        :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles (applies to the button, not the wrapping div)\"}\n   {:name :attr             :required false                        :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the button, not the wrapping div)\"]}])\n\n(defn button\n  \"Returns the markup for a basic button\"\n  []\n  (let [showing? (reagent/atom false)]\n    (fn\n      [& {:keys [label on-click tooltip tooltip-position disabled? class style attr]\n          :or   {class \"btn-default\"}\n          :as   args}]\n      {:pre [(validate-args-macro button-args-desc args \"button\")]}\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\n      (let [disabled? (deref-or-value disabled?)\n            the-button [:button\n                        (merge\n                          {:class    (str \"rc-button btn \" class)\n                           :style    (merge\n                                       (flex-child-style \"none\")\n                                       style)\n                           :disabled disabled?\n                           :on-click (handler-fn\n                                       (when (and on-click (not disabled?))\n                                         (on-click event)))}\n                          (when tooltip\n                            {:on-mouse-over (handler-fn (reset! showing? true))\n                             :on-mouse-out  (handler-fn (reset! showing? false))})\n                          attr)\n                        label]]\n        (when disabled?\n          (reset! showing? false))\n        [box\n         :class \"rc-button-wrapper display-inline-flex\"\n         :align :start\n         :child (if tooltip\n                  [popover-tooltip\n                   :label    tooltip\n                   :position (or tooltip-position :below-center)\n                   :showing? showing?\n                   :anchor   the-button]\n                  the-button)]))))\n\n\n;;--------------------------------------------------------------------------------------------------\n;; Component: md-circle-icon-button\n;;--------------------------------------------------------------------------------------------------\n\n(def md-circle-icon-button-args-desc\n  [{:name :md-icon-name     :required true  :default \"zmdi-plus\"   :type \"string\"          :validate-fn string?           :description [:span \"the name of the icon.\" [:br] \"For example, \" [:code \"\\\"zmdi-plus\\\"\"] \" or \" [:code \"\\\"zmdi-undo\\\"\"]] }\n   {:name :on-click         :required false                        :type \"-> nil\"          :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\n   {:name :size             :required false :default :regular      :type \"keyword\"         :validate-fn button-size?      :description [:span \"one of \" button-sizes-list]}\n   {:name :tooltip          :required false                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\n   {:name :emphasise?       :required false :default false         :type \"boolean\"                                        :description \"if true, use emphasised styling so the button really stands out\"}\n   {:name :disabled?        :required false :default false         :type \"boolean\"                                        :description \"if true, the user can't click the button\"}\n   {:name :class            :required false                        :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated (applies to the button, not the wrapping div)\"}\n   {:name :style            :required false                        :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override (applies to the button, not the wrapping div)\"}\n   {:name :attr             :required false                        :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the button, not the wrapping div)\"]}])\n\n(defn md-circle-icon-button\n  \"a circular button containing a material design icon\"\n  []\n  (let [showing? (reagent/atom false)]\n    (fn\n      [& {:keys [md-icon-name on-click size tooltip tooltip-position emphasise? disabled? class style attr]\n          :or   {md-icon-name \"zmdi-plus\"}\n          :as   args}]\n      {:pre [(validate-args-macro md-circle-icon-button-args-desc args \"md-circle-icon-button\")]}\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\n      (let [the-button [:div\n                        (merge\n                          {:class    (str\n                                       \"rc-md-circle-icon-button noselect \"\n                                       (case size\n                                         :smaller \"rc-circle-smaller \"\n                                         :larger \"rc-circle-larger \"\n                                         \" \")\n                                       (when emphasise? \"rc-circle-emphasis \")\n                                       (when disabled? \"rc-circle-disabled \")\n                                       class)\n                           :style    (merge\n                                       {:cursor (when-not disabled? \"pointer\")}\n                                       style)\n                           :on-click (handler-fn\n                                       (when (and on-click (not disabled?))\n                                         (on-click event)))}\n                          (when tooltip\n                            {:on-mouse-over (handler-fn (reset! showing? true))\n                             :on-mouse-out  (handler-fn (reset! showing? false))})\n                          attr)\n                        [:i {:class (str \"zmdi zmdi-hc-fw-rc \" md-icon-name)}]]]\n        [box\n         :class \"rc-md-circle-icon-button-wrapper display-inline-flex\"\n         :align :start\n         :child (if tooltip\n                  [popover-tooltip\n                   :label    tooltip\n                   :position (or tooltip-position :below-center)\n                   :showing? showing?\n                   :anchor   the-button]\n                  the-button)]))))\n\n\n;;--------------------------------------------------------------------------------------------------\n;; Component: md-icon-button\n;;--------------------------------------------------------------------------------------------------\n\n(def md-icon-button-args-desc\n  [{:name :md-icon-name     :required true  :default \"zmdi-plus\"   :type \"string\"          :validate-fn string?           :description [:span \"the name of the icon.\" [:br] \"For example, \" [:code \"\\\"zmdi-plus\\\"\"] \" or \" [:code \"\\\"zmdi-undo\\\"\"]]}\n   {:name :on-click         :required false                        :type \"-> nil\"          :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\n   {:name :size             :required false :default :regular      :type \"keyword\"         :validate-fn button-size?      :description [:span \"one of \" button-sizes-list]}\n   {:name :tooltip          :required false                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\n   {:name :emphasise?       :required false :default false         :type \"boolean\"                                        :description \"if true, use emphasised styling so the button really stands out\"}\n   {:name :disabled?        :required false :default false         :type \"boolean\"                                        :description \"if true, the user can't click the button\"}\n   {:name :class            :required false                        :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated (applies to the button, not the wrapping div)\"}\n   {:name :style            :required false                        :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override (applies to the button, not the wrapping div)\"}\n   {:name :attr             :required false                        :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the button, not the wrapping div)\"]}])\n\n(defn md-icon-button\n  \"a square button containing a material design icon\"\n  []\n  (let [showing? (reagent/atom false)]\n    (fn\n      [& {:keys [md-icon-name on-click size tooltip tooltip-position emphasise? disabled? class style attr]\n          :or   {md-icon-name \"zmdi-plus\"}\n          :as   args}]\n      {:pre [(validate-args-macro md-icon-button-args-desc args \"md-icon-button\")]}\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\n      (let [the-button [:div\n                        (merge\n                          {:class    (str\n                                       \"rc-md-icon-button noselect \"\n                                       (case size\n                                         :smaller \"rc-icon-smaller \"\n                                         :larger \"rc-icon-larger \"\n                                         \" \")\n                                       (when emphasise? \"rc-icon-emphasis \")\n                                       (when disabled? \"rc-icon-disabled \")\n                                       class)\n                           :style    (merge\n                                       {:cursor (when-not disabled? \"pointer\")}\n                                       style)\n                           :on-click (handler-fn\n                                       (when (and on-click (not disabled?))\n                                         (on-click event)))}\n                          (when tooltip\n                            {:on-mouse-over (handler-fn (reset! showing? true))\n                             :on-mouse-out  (handler-fn (reset! showing? false))})\n                          attr)\n                        [:i {:class (str \"zmdi zmdi-hc-fw-rc \" md-icon-name)}]]]\n        [box\n         :class \"rc-md-icon-button-wrapper display-inline-flex\"\n         :align :start\n         :child (if tooltip\n                  [popover-tooltip\n                   :label    tooltip\n                   :position (or tooltip-position :below-center)\n                   :showing? showing?\n                   :anchor   the-button]\n                  the-button)]))))\n\n\n;;--------------------------------------------------------------------------------------------------\n;; Component: info-button\n;;--------------------------------------------------------------------------------------------------\n\n(def info-button-args-desc\n  [{:name :info     :required true                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what's shown in the popover\"}\n   {:name :position :required false :default :right-below :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\n   {:name :width    :required false :default \"250px\"      :type \"string\"          :validate-fn string?           :description \"width in px\"}\n   {:name :class    :required false                       :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated (applies to the button, not the popover wrapper)\"}\n   {:name :style    :required false                       :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override (applies to the button, not the popover wrapper)\"}\n   {:name :attr     :required false                       :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the button, not the popover wrapper)\"]}])\n\n(defn info-button\n  \"A tiny light grey button, with an 'i' in it. Meant to be unobrusive.\n  When pressed, displays a popup assumidly containing helpful information.\n  Primarily designed to be nestled against the label of an input field, explaining the purpose of that field.\n  Create a very small \\\"i\\\" icon via SVG\"\n  []\n  (let [showing? (reagent/atom false)]\n    (fn\n      [& {:keys [info position width class style attr] :as args}]\n      {:pre [(validate-args-macro info-button-args-desc args \"info-button\")]}\n      [popover-tooltip\n       :label     info\n       :status    :info\n       :position  (or position :right-below)\n       :width     (or width \"250px\")\n       :showing?  showing?\n       :on-cancel #(swap! showing? not)\n       :anchor    [:div\n                   (merge\n                     {:class    (str \"rc-info-button noselect \" class)\n                      :style    (merge {:cursor \"pointer\"} style)\n                      :on-click (handler-fn (swap! showing? not))}\n                     attr)\n                   [:svg {:width \"11\" :height \"11\"}\n                    [:circle {:cx \"5.5\" :cy \"5.5\" :r \"5.5\"}]\n                    [:circle {:cx \"5.5\" :cy \"2.5\" :r \"1.4\" :fill \"white\"}]\n                    [:line   {:x1 \"5.5\" :y1 \"5.2\" :x2 \"5.5\" :y2 \"9.7\" :stroke \"white\" :stroke-width \"2.5\"}]]]])))\n\n\n;;--------------------------------------------------------------------------------------------------\n;; Component: row-button\n;;--------------------------------------------------------------------------------------------------\n\n(def row-button-args-desc\n  [{:name :md-icon-name     :required true  :default \"zmdi-plus\"   :type \"string\"          :validate-fn string?           :description [:span \"the name of the icon.\" [:br] \"For example, \" [:code \"\\\"zmdi-plus\\\"\"] \" or \" [:code \"\\\"zmdi-undo\\\"\"]]}\n   {:name :on-click         :required false                        :type \"-> nil\"          :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\n   {:name :mouse-over-row?  :required false :default false         :type \"boolean\"                                        :description \"true if the mouse is hovering over the row\"}\n   {:name :tooltip          :required false                        :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"         :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\n   {:name :disabled?        :required false :default false         :type \"boolean\"                                        :description \"if true, the user can't click the button\"}\n   {:name :class            :required false                        :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated (applies to the button, not the wrapping div)\"}\n   {:name :style            :required false                        :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override (applies to the button, not the wrapping div)\"}\n   {:name :attr             :required false                        :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the button, not the wrapping div)\"]}])\n\n(defn row-button\n  \"a small button containing a material design icon\"\n  []\n  (let [showing? (reagent/atom false)]\n    (fn\n      [& {:keys [md-icon-name on-click mouse-over-row? tooltip tooltip-position disabled? class style attr]\n          :or   {md-icon-name \"zmdi-plus\"}\n          :as   args}]\n      {:pre [(validate-args-macro row-button-args-desc args \"row-button\")]}\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\n      (let [the-button [:div\n                        (merge\n                          {:class    (str\n                                       \"rc-row-button noselect \"\n                                       (when mouse-over-row? \"rc-row-mouse-over-row \")\n                                       (when disabled? \"rc-row-disabled \")\n                                       class)\n                           :style    style\n                           :on-click (handler-fn\n                                       (when (and on-click (not disabled?))\n                                         (on-click event)))}\n                          (when tooltip\n                            {:on-mouse-over (handler-fn (reset! showing? true))\n                             :on-mouse-out  (handler-fn (reset! showing? false))}) ;; Need to return true to ALLOW default events to be performed\n                          attr)\n                        [:i {:class (str \"zmdi zmdi-hc-fw-rc \" md-icon-name)}]]]\n        [box\n         :class \"rc-row-button-wrapper display-inline-flex\"\n         :align :start\n         :child (if tooltip\n                  [popover-tooltip\n                   :label    tooltip\n                   :position (or tooltip-position :below-center)\n                   :showing? showing?\n                   :anchor   the-button]\n                  the-button)]))))\n\n\n;;--------------------------------------------------------------------------------------------------\n;; Component: hyperlink\n;;--------------------------------------------------------------------------------------------------\n\n(def hyperlink-args-desc\n  [{:name :label            :required true                         :type \"string | hiccup | atom\" :validate-fn string-or-hiccup? :description \"label/hiccup for the button\"}\n   {:name :on-click         :required false                        :type \"-> nil\"                 :validate-fn fn?               :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\n   {:name :tooltip          :required false                        :type \"string | hiccup\"        :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"                :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\n   {:name :disabled?        :required false :default false         :type \"boolean | atom\"                                        :description \"if true, the user can't click the button\"}\n   {:name :class            :required false                        :type \"string\"                 :validate-fn string?           :description \"CSS class names, space separated (applies to the hyperlink, not the wrapping div)\"}\n   {:name :style            :required false                        :type \"CSS style map\"          :validate-fn css-style?        :description \"CSS styles to add or override (applies to the hyperlink, not the wrapping div)\"}\n   {:name :attr             :required false                        :type \"HTML attr map\"          :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the hyperlink, not the wrapping div)\"]}])\n\n(defn hyperlink\n  \"Renders an underlined text hyperlink component.\n   This is very similar to the button component above but styled to looks like a hyperlink.\n   Useful for providing button functionality for less important functions, e.g. Cancel\"\n  []\n  (let [showing? (reagent/atom false)]\n    (fn\n      [& {:keys [label on-click tooltip tooltip-position disabled? class style attr] :as args}]\n      {:pre [(validate-args-macro hyperlink-args-desc args \"hyperlink\")]}\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\n      (let [label      (deref-or-value label)\n            disabled?  (deref-or-value disabled?)\n            the-button [box\n                        :align :start\n                        :child [:a\n                                (merge\n                                  {:class    (str \"rc-hyperlink noselect \" class)\n                                   :style    (merge\n                                               (flex-child-style \"none\")\n                                               {:cursor (if disabled? \"not-allowed\" \"pointer\")\n                                                :color  (when disabled? \"grey\")}\n                                               style)\n                                   :on-click (handler-fn\n                                               (when (and on-click (not disabled?))\n                                                 (on-click event)))}\n                                  (when tooltip\n                                    {:on-mouse-over (handler-fn (reset! showing? true))\n                                     :on-mouse-out  (handler-fn (reset! showing? false))})\n                                  attr)\n                                label]]]\n        [box\n         :class \"rc-hyperlink-wrapper display-inline-flex\"\n         :align :start\n         :child (if tooltip\n                  [popover-tooltip\n                   :label    tooltip\n                   :position (or tooltip-position :below-center)\n                   :showing? showing?\n                   :anchor   the-button]\n                  the-button)]))))\n\n\n;;--------------------------------------------------------------------------------------------------\n;; Component: hyperlink-href\n;;--------------------------------------------------------------------------------------------------\n\n(def hyperlink-href-args-desc\n  [{:name :label            :required true                         :type \"string | hiccup | atom\" :validate-fn string-or-hiccup? :description \"label/hiccup for the button\"}\n   {:name :href             :required true                         :type \"string | atom\"          :validate-fn string-or-atom?   :description \"if specified, the link target URL\"}\n   {:name :target           :required false :default \"_self\"       :type \"string | atom\"          :validate-fn string-or-atom?   :description \"one of \\\"_self\\\" or \\\"_blank\\\"\"}\n   {:name :tooltip          :required false                        :type \"string | hiccup\"        :validate-fn string-or-hiccup? :description \"what to show in the tooltip\"}\n   {:name :tooltip-position :required false :default :below-center :type \"keyword\"                :validate-fn position?         :description [:span \"relative to this anchor. One of \" position-options-list]}\n   {:name :class            :required false                        :type \"string\"                 :validate-fn string?           :description \"CSS class names, space separated (applies to the hyperlink, not the wrapping div)\"}\n   {:name :style            :required false                        :type \"CSS style map\"          :validate-fn css-style?        :description \"CSS styles to add or override (applies to the hyperlink, not the wrapping div)\"}\n   {:name :attr             :required false                        :type \"HTML attr map\"          :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the hyperlink, not the wrapping div)\"]}])\n\n(defn hyperlink-href\n  \"Renders an underlined text hyperlink component.\n   This is very similar to the button component above but styled to looks like a hyperlink.\n   Useful for providing button functionality for less important functions, e.g. Cancel\"\n  []\n  (let [showing? (reagent/atom false)]\n    (fn\n      [& {:keys [label href target tooltip tooltip-position class style attr] :as args}]\n      {:pre [(validate-args-macro hyperlink-href-args-desc args \"hyperlink-href\")]}\n      (when-not tooltip (reset! showing? false)) ;; To prevent tooltip from still showing after button drag/drop\n      (let [label      (deref-or-value label)\n            href       (deref-or-value href)\n            target     (deref-or-value target)\n            the-button [:a\n                        (merge {:class  (str \"rc-hyperlink-href noselect \" class)\n                                :style  (merge (flex-child-style \"none\")\n                                               style)\n                                :href   href\n                                :target target}\n                               (when tooltip\n                                 {:on-mouse-over (handler-fn (reset! showing? true))\n                                  :on-mouse-out  (handler-fn (reset! showing? false))})\n                               attr)\n                        label]]\n\n        [box\n         :class \"rc-hyperlink-href-wrapper display-inline-flex\"\n         :align :start\n         :child (if tooltip\n                  [popover-tooltip\n                   :label    tooltip\n                   :position (or tooltip-position :below-center)\n                   :showing? showing?\n                   :anchor   the-button]\n                  the-button)]))))\n"]}