{"version":3,"sources":["re_com/close_button.cljs"],"mappings":"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","names":["re-com.close-button/close-button-args-desc","cljs.core/fn?","cljs.core/number?","cljs.core/string?","re-com.validate/string-or-hiccup?","re-com.validate/css-style?","re-com.validate/html-attr?","re-com.close-button/close-button","over?","reagent.core.atom","p__34060","map__34064","cljs.core/--destructure-map","cljs.core.get","js/Error","on-click","div-size","font-size","color","hover-color","tooltip","top-offset","left-offset","disabled?","class","style","attr","args","js/goog.DEBUG","re_com.validate.validate_args","re-com.validate/extract-arg-data","re-com.util/deref-or-value","re-com.box/box","re-com.util/px","cljs.core.merge","cljs.core/deref","re_com.util.px","event","and__4221__auto__","cljs.core/not","cljs.core/reset!"],"sourcesContent":["(ns re-com.close-button\n  (:require-macros [re-com.core :refer [handler-fn]])\n  (:require [re-com.util     :refer [deref-or-value px]]\n            [re-com.validate :refer [string-or-hiccup? css-style? html-attr?] :refer-macros [validate-args-macro]]\n            [re-com.box      :refer [box]]\n            [reagent.core    :as    reagent]))\n\n\n;; ------------------------------------------------------------------------------------\n;;  Component: close-button\n;;\n;;  Note: Should be in buttons module but that requires popover and\n;;        popover requires this button\n;; ------------------------------------------------------------------------------------\n\n;; TODO: Add a demo page for this\n\n(def close-button-args-desc\n  [{:name :on-click     :required false                   :type \"-> nil\"           :validate-fn fn?                :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\n   {:name :div-size     :required false  :default 16      :type \"number\"           :validate-fn number?            :description \"numeric px size of the div containing the close button (can be 0 because the 'x' button text is absolutely positioned and centered within the div)\"}\n   {:name :font-size    :required false  :default 16      :type \"number\"           :validate-fn number?            :description \"numeric px font size of the 'x' button text\"}\n   {:name :color        :required false  :default \"#ccc\"  :type \"string\"           :validate-fn string?            :description \"HTML color of the 'x' button text\"}\n   {:name :hover-color  :required false  :default \"#999\"  :type \"string\"           :validate-fn string?            :description \"HTML color of the button text when the mouse is hovering over it\"}\n   {:name :tooltip      :required false                   :type \"string | hiccup\"  :validate-fn string-or-hiccup?  :description \"what to show in the tooltip\"}\n   {:name :top-offset   :required false                   :type \"number\"           :validate-fn number?            :description \"offset the 'x' button text up or down from it's default position in the containing div (can be positive or negative)\"}\n   {:name :left-offset  :required false                   :type \"number\"           :validate-fn number?            :description \"offset the 'x' button text left or right from it's default position in the containing div (can be positive or negative)\"}\n   {:name :disabled?    :required false  :default false   :type \"boolean | atom\"                                   :description \"if true, the user can't click the button\"}\n   {:name :class        :required false                   :type \"string\"           :validate-fn string?            :description \"CSS class names, space separated (applies to the button, not the wrapping div)\"}\n   {:name :style        :required false                   :type \"CSS style map\"    :validate-fn css-style?         :description \"CSS styles (applies to the button, not the wrapping div)\"}\n   {:name :attr         :required false                   :type \"HTML attr map\"    :validate-fn html-attr?         :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the button, not the wrapping div)\"]}])\n\n(defn close-button\n  []\n  (let [over? (reagent/atom false)]\n    (fn close-button-render\n      [& {:keys [on-click div-size font-size color hover-color tooltip top-offset left-offset disabled? class style attr] :as args\n          :or   {div-size 16 font-size 16 color \"#ccc\" hover-color \"#999\"}}]\n      {:pre [(validate-args-macro close-button-args-desc args \"close-button\")]}\n      (let [disabled?  (deref-or-value disabled?)]\n        [box\n         :class \"rc-close-button\"\n         :style {:display          \"inline-block\"\n                 :position         \"relative\"\n                 :width            (px div-size)\n                 :height           (px div-size)}\n         :child [box\n                 :class class\n                 :style (merge\n                          {:position  \"absolute\"\n                           :cursor    (when-not disabled? \"pointer\")\n                           :font-size (px font-size)\n                           :color     (if @over? hover-color color)\n                           :top       (px (- (/ (- font-size div-size) 2) top-offset)  :negative)\n                           :left      (px (- (/ (- font-size div-size) 2) left-offset) :negative)}\n                          style)\n                 :attr  (merge\n                          {:title          tooltip\n                           :on-click       (handler-fn\n                                             (when (and on-click (not disabled?))\n                                               (on-click event)\n                                               (.stopPropagation event)))\n                           :on-mouse-enter (handler-fn (reset! over? true))\n                           :on-mouse-leave (handler-fn (reset! over? false))}\n                          attr)\n                 :child [:i {:class \"zmdi zmdi-hc-fw-rc zmdi zmdi-close\"}]]]))))\n"]}