{"version":3,"sources":["re_frisk/diff/diff.cljs"],"mappings":"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","names":["re-frisk.diff.diff/mv-keys","coll","cljs.core/map?","cljs.core/keys","p1__39234#","p2__39233#","cljs.core.keep_indexed","re-frisk.diff.diff/diff-coll","a","b","cljs.core.into","iter__4622__auto__","s__39236","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4620__auto__","size__4621__auto__","cljs.core/count","b__39238","cljs.core/chunk-buffer","i__39237","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__39235","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","key","clojure.set.union","cljs.core/set","val-a","cljs.core.get","val-b","cljs.core._EQ_","and__4221__auto__","re-frisk.diff.diff/diff","re-frisk.diff.diff/diff-set","clojure.set.difference","re-frisk.diff.diff/diff-rest","cljs.core/vector?","cljs.core/set?","cljs.core/chunk-first"],"sourcesContent":["(ns re-frisk.diff.diff\n  (:require [clojure.set :as set]))\n\n;; clojure.data/diff is hard to work with:\n;; (diff {:a [0 1 2]} {:a [0 1]}) => ({:a [nil nil 2]} nil {:a [0 1]})\n;; (data/diff {:a [2]} {:a [1]}) => ({:a [2]} {:a [1]} nil)\n;; ... so roll our own\n\n(declare diff)\n\n(defn- mv-keys [coll]\n  (if (map? coll)\n    (keys coll)\n    (keep-indexed #(when-not (nil? %2) %1) coll)))\n\n(defn- diff-coll [a b]\n  (into {}\n        (for [key (set/union (set (mv-keys a)) (set (mv-keys b)))]\n          (let [val-a (get a key)\n                val-b (get b key)]\n            (cond\n              (= val-a val-b) nil\n              (and val-a val-b) [key (diff val-a val-b)]\n              val-a [key {:deleted val-a}]\n              val-b [key val-b])))))\n\n(defn- diff-set [a b]\n  {:deleted (set/difference a b)\n   :added (set/difference b a)})\n\n(defn- diff-rest [a b]\n  {:before a :after b})\n\n(defn diff [a b]\n  (cond\n    (= a b) nil\n    (and (map? a) (map? b)) (diff-coll a b)\n    (and (vector? a) (vector? b)) (diff-coll a b)\n    (and (set? a) (set? b)) (diff-set a b)\n    :else (diff-rest a b)))"]}