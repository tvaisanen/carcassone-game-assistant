{"version":3,"sources":["re_com/splits.cljs"],"mappings":"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","names":["re-com.splits/drag-handle","orientation","over?","vertical?","cljs.core._EQ_","length","width","pos1","pos2","color","border","flex-flow","cljs.core.merge","re-com.box/flex-flow-style","re-com.splits/hv-split-args-desc","re-com.validate/string-or-hiccup?","cljs.core/string?","cljs.core/fn?","re-com.validate/number-or-string?","re-com.validate/css-style?","re-com.validate/html-attr?","var_args","args__4835__auto__","len__4829__auto__","i__4830__auto__","argseq__4836__auto__","cljs.core/IndexedSeq","re-com.splits/h-split","p__36557","map__36558","cljs.core/--destructure-map","cljs.core.get","js/Error","seq36553","self__4817__auto__","cljs.core/seq","size","height","on-split-change","initial-split","splitter-size","margin","args","js/goog.DEBUG","re_com.validate.validate_args","re-com.validate/extract-arg-data","p1__36551#","container-id","cljs.core.gensym","split-perc","reagent.core.atom","js/parseInt","dragging?","stop-drag","G__36566","cljs.core/deref","cljs.core/reset!","calc-perc","mouse-x","container","re-com.util/get-element-by-id","offsets","re-com.util/sum-scroll-offsets","c-width","c-left-x","relative-x","<html>?","js/document","mouseout","event","mousemove","mousedown","mouseover-split","mouseout-split","make-container-attrs","class","style","attr","in-drag?","re-com.box/flex-child-style","make-panel-attrs","percentage","make-splitter-attrs","p__36586","map__36588","panel-1","panel-2","_size","_width","_height","_on-split-change","_initial-split","_splitter-size","_margin","re-com.splits/v-split","p__36619","map__36620","seq36603","p1__36594#","G__36623","mouse-y","c-height","c-top-y","relative-y","p__36637","map__36638"],"sourcesContent":["(ns re-com.splits\n  (:require-macros [re-com.core :refer [handler-fn]])\n  (:require [re-com.util        :refer [get-element-by-id sum-scroll-offsets]]\n            [re-com.box         :refer [flex-child-style flex-flow-style]]\n            [re-com.validate    :refer [string-or-hiccup? number-or-string? html-attr? css-style?] :refer-macros [validate-args-macro]]\n            [reagent.core       :as    reagent]))\n\n\n(defn drag-handle\n  \"Return a drag handle to go into a vertical or horizontal splitter bar:\n    orientation: Can be :horizonal or :vertical\n    over?:       When true, the mouse is assumed to be over the splitter so show a bolder color\"\n  [orientation over?]\n  (let [vertical? (= orientation :vertical)\n        length    \"20px\"\n        width     \"8px\"\n        pos1      \"3px\"\n        pos2      \"3px\"\n        color     (if over? \"#999\" \"#ccc\")\n        border    (str \"solid 1px \" color)\n        flex-flow (str (if vertical? \"row\" \"column\") \" nowrap\")]\n    [:div {:class \"display-flex\"\n           :style (merge (flex-flow-style flex-flow)\n                         {:width  (if vertical? width length)\n                          :height (if vertical? length width)\n                          :margin \"auto\"})}\n     [:div {:style (if vertical?\n                     {:width pos1   :height length :border-right  border}\n                     {:width length :height pos1   :border-bottom border})}]\n     [:div {:style (if vertical?\n                     {:width pos2   :height length :border-right  border}\n                     {:width length :height pos2   :border-bottom border})}]]))\n\n\n;; ------------------------------------------------------------------------------------\n;;  Component: h-split\n;; ------------------------------------------------------------------------------------\n\n(def hv-split-args-desc\n  [{:name :panel-1         :required true                  :type \"hiccup\"          :validate-fn string-or-hiccup? :description \"markup to go in the left (or top) panel\"}\n   {:name :panel-2         :required true                  :type \"hiccup\"          :validate-fn string-or-hiccup? :description \"markup to go in the right (or bottom) panel\"}\n   {:name :size            :required false :default \"auto\" :type \"string\"          :validate-fn string?           :description [:span \"applied to the outer container of the two panels. Equivalent to CSS style \" [:span.bold \"flex\"] \".\" [:br]  \"Examples: \" [:code \"initial\"] \", \" [:code \"auto\"] \", \" [:code \"none\"]\", \" [:code \"100px\"] \", \" [:code \"2\"] \" or a generic triple of \" [:code \"grow shrink basis\"]]}\n   {:name :width           :required false                 :type \"string\"          :validate-fn string?           :description \"width of the outer container of the two panels. A CSS width style\"}\n   {:name :height          :required false                 :type \"string\"          :validate-fn string?           :description \"height of the outer container of the two panels. A CSS height style\"}\n   {:name :on-split-change :required false                 :type \"double -> nil\"   :validate-fn fn?               :description [:span \"called when the user moves the splitter bar (on mouse up, not on each mouse move). Given the new \" [:code \":panel-1\"] \" percentage split\"]}\n   {:name :initial-split   :required false :default 50     :type \"double | string\" :validate-fn number-or-string? :description [:span \"initial split percentage for \" [:code \":panel-1\"] \". Can be double value or string (with/without percentage sign)\"]}\n   {:name :splitter-size   :required false :default \"8px\"  :type \"string\"          :validate-fn string?           :description \"thickness of the splitter\"}\n   {:name :margin          :required false :default \"8px\"  :type \"string\"          :validate-fn string?           :description \"thickness of the margin around the panels\"}\n   {:name :class           :required false                 :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated (applies to the outer container)\"}\n   {:name :style           :required false                 :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override (applies to the outer container)\"}\n   {:name :attr            :required false                 :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the outer container)\"]}])\n\n(defn h-split\n  \"Returns markup for a horizontal layout component\"\n  [& {:keys [size width height on-split-change initial-split splitter-size margin]\n      :or   {size \"auto\" initial-split 50 splitter-size \"8px\" margin \"8px\"}\n      :as   args}]\n  {:pre [(validate-args-macro hv-split-args-desc args \"h-split\")]}\n  (let [container-id         (gensym \"h-split-\")\n        split-perc           (reagent/atom (js/parseInt initial-split)) ;; splitter position as a percentage of width\n        dragging?            (reagent/atom false)                       ;; is the user dragging the splitter (mouse is down)?\n        over?                (reagent/atom false)                       ;; is the mouse over the splitter, if so, highlight it\n\n        stop-drag            (fn []\n                               (when on-split-change (on-split-change @split-perc))\n                               (reset! dragging? false))\n\n        calc-perc            (fn [mouse-x]                                                 ;; turn a mouse y coordinate into a percentage position\n                               (let [container  (get-element-by-id container-id)           ;; the outside container\n                                     offsets    (sum-scroll-offsets container)             ;; take any scrolling into account\n                                     c-width    (.-clientWidth container)                  ;; the container's width\n                                     c-left-x   (.-offsetLeft container)                   ;; the container's left X\n                                     relative-x (+ (- mouse-x c-left-x) (:left offsets))]  ;; the X of the mouse, relative to container\n                                 (* 100.0 (/ relative-x c-width))))                        ;; do the percentage calculation\n\n        <html>?              #(= % (.-documentElement js/document))                        ;; test for the <html> element\n\n        mouseout             (fn [event]\n                               (if (<html>? (.-relatedTarget event))                       ;; stop drag if we leave the <html> element\n                                 (stop-drag)))\n\n        mousemove            (fn [event]\n                               (reset! split-perc (calc-perc (.-clientX event))))\n\n        mousedown            (fn [event]\n                               (.preventDefault event)                                    ;; stop selection of text during drag\n                               (reset! dragging? true))\n\n        mouseover-split      #(reset! over? true) ;; true CANCELs mouse-over (false cancels all others)\n        mouseout-split       #(reset! over? false)\n\n        make-container-attrs (fn [class style attr in-drag?]\n                               (merge {:class (str \"rc-h-split display-flex \" class)\n                                       :id    container-id\n                                       :style (merge (flex-child-style size)\n                                                     (flex-flow-style \"row nowrap\")\n                                                     {:margin margin\n                                                      :width  width\n                                                      :height height}\n                                                     style)}\n                                      (when in-drag?                             ;; only listen when we are dragging\n                                        {:on-mouse-up   (handler-fn (stop-drag))\n                                         :on-mouse-move (handler-fn (mousemove event))\n                                         :on-mouse-out  (handler-fn (mouseout event))})\n                                      attr))\n\n        make-panel-attrs     (fn [class in-drag? percentage]\n                               {:class (str \"display-flex \" class)\n                                :style (merge (flex-child-style (str percentage \" 1 0px\"))\n                                              {:overflow \"hidden\"} ;; TODO: Shouldn't have this...test removing it\n                                              (when in-drag? {:pointer-events \"none\"}))})\n\n        make-splitter-attrs  (fn [class]\n                               {:class         (str \"display-flex \" class)\n                                :on-mouse-down (handler-fn (mousedown event))\n                                :on-mouse-over (handler-fn (mouseover-split))\n                                :on-mouse-out  (handler-fn (mouseout-split))\n                                :style         (merge (flex-child-style (str \"0 0 \" splitter-size))\n                                                      {:cursor \"col-resize\"}\n                                                      (when @over? {:background-color \"#f8f8f8\"}))})]\n\n    (fn\n      [& {:keys [panel-1 panel-2 _size _width _height _on-split-change _initial-split _splitter-size _margin class style attr]}]\n      [:div (make-container-attrs class style attr @dragging?)\n       [:div (make-panel-attrs \"rc-h-split-top\" @dragging? @split-perc)\n        panel-1]\n       [:div (make-splitter-attrs \"rc-h-split-splitter\")\n        [drag-handle :vertical @over?]]\n       [:div (make-panel-attrs \"rc-h-split-bottom\" @dragging? (- 100 @split-perc))\n        panel-2]])))\n\n\n;; ------------------------------------------------------------------------------------\n;;  Component: v-split\n;; ------------------------------------------------------------------------------------\n\n(defn v-split\n  \"Returns markup for a vertical layout component\"\n  [& {:keys [size width height on-split-change initial-split splitter-size margin]\n      :or   {size \"auto\" initial-split 50 splitter-size \"8px\" margin \"8px\"}\n      :as   args}]\n  {:pre [(validate-args-macro hv-split-args-desc args \"v-split\")]}\n  (let [container-id         (gensym \"v-split-\")\n        split-perc           (reagent/atom (js/parseInt initial-split))  ;; splitter position as a percentage of height\n        dragging?            (reagent/atom false)                        ;; is the user dragging the splitter (mouse is down)?\n        over?                (reagent/atom false)                        ;; is the mouse over the splitter, if so, highlight it\n\n        stop-drag            (fn []\n                               (when on-split-change (on-split-change @split-perc))\n                               (reset! dragging? false))\n\n        calc-perc            (fn [mouse-y]                                                 ;; turn a mouse y coordinate into a percentage position\n                               (let [container  (get-element-by-id container-id)           ;; the outside container\n                                     offsets    (sum-scroll-offsets container)             ;; take any scrolling into account\n                                     c-height   (.-clientHeight container)                 ;; the container's height\n                                     c-top-y    (.-offsetTop container)                    ;; the container's top Y\n                                     relative-y (+ (- mouse-y c-top-y) (:top offsets))]    ;; the Y of the mouse, relative to container\n                                 (* 100.0 (/ relative-y c-height))))                       ;; do the percentage calculation\n\n        <html>?              #(= % (.-documentElement js/document))                        ;; test for the <html> element\n\n        mouseout             (fn [event]\n                               (if (<html>? (.-relatedTarget event))                       ;; stop drag if we leave the <html> element\n                                 (stop-drag)))\n\n        mousemove            (fn [event]\n                               (reset! split-perc (calc-perc (.-clientY event))))\n\n        mousedown            (fn [event]\n                               (.preventDefault event)                                    ;; stop selection of text during drag\n                               (reset! dragging? true))\n\n        mouseover-split      #(reset! over? true)\n        mouseout-split       #(reset! over? false)\n\n        make-container-attrs (fn [class style attr in-drag?]\n                               (merge {:class (str \"rc-v-split display-flex \" class)\n                                       :id    container-id\n                                       :style (merge (flex-child-style size)\n                                                     (flex-flow-style \"column nowrap\")\n                                                     {:margin margin\n                                                      :width  width\n                                                      :height height}\n                                                     style)}\n                                      (when in-drag?                             ;; only listen when we are dragging\n                                        {:on-mouse-up   (handler-fn (stop-drag))\n                                         :on-mouse-move (handler-fn (mousemove event))\n                                         :on-mouse-out  (handler-fn (mouseout event))})\n                                      attr))\n\n        make-panel-attrs     (fn [class in-drag? percentage]\n                               {:class (str \"display-flex \" class)\n                                :style (merge (flex-child-style (str percentage \" 1 0px\"))\n                                              {:overflow \"hidden\"} ;; TODO: Shouldn't have this...test removing it\n                                              (when in-drag? {:pointer-events \"none\"}))})\n\n        make-splitter-attrs  (fn [class]\n                               {:class         (str \"display-flex \" class)\n                                :on-mouse-down (handler-fn (mousedown event))\n                                :on-mouse-over (handler-fn (mouseover-split))\n                                :on-mouse-out  (handler-fn (mouseout-split))\n                                :style         (merge (flex-child-style (str \"0 0 \" splitter-size))\n                                                      {:cursor  \"row-resize\"}\n                                                      (when @over? {:background-color \"#f8f8f8\"}))})]\n\n    (fn\n      [& {:keys [panel-1 panel-2 _size _width _height _on-split-change _initial-split _splitter-size _margin class style attr]}]\n      [:div (make-container-attrs class style attr @dragging?)\n       [:div (make-panel-attrs \"re-v-split-top\" @dragging? @split-perc)\n        panel-1]\n       [:div (make-splitter-attrs \"re-v-split-splitter\")\n        [drag-handle :horizontal @over?]]\n       [:div (make-panel-attrs \"re-v-split-bottom\" @dragging? (- 100 @split-perc))\n        panel-2]])))\n"]}