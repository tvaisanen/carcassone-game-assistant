{"version":3,"sources":["re_com/alert.cljs"],"mappings":"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","names":["re-com.alert/alert-box-args-desc","re-com.validate/alert-type?","re-com.validate/alert-types-list","re-com.validate/string-or-hiccup?","cljs.core/string?","cljs.core/fn?","re-com.validate/css-style?","re-com.validate/html-attr?","var_args","args__4835__auto__","len__4829__auto__","i__4830__auto__","argseq__4836__auto__","cljs.core/IndexedSeq","re-com.alert/alert-box","p__34378","map__34379","cljs.core/--destructure-map","cljs.core.get","js/Error","seq34361","self__4817__auto__","cljs.core/seq","id","alert-type","heading","body","padding","closeable?","on-close","class","style","attr","args","js/goog.DEBUG","re_com.validate.validate_args","re-com.validate/extract-arg-data","close-alert","re-com.close-button/close-button","alert-class","G__34383","cljs.core.merge","re-com.box/flex-child-style","re-com.box/h-box","and__4221__auto__","cljs.core/not","re-com.alert/alert-list-args-desc","re-com.validate/vector-of-maps?","re-com.alert/alert-list","p__34398","map__34399","seq34397","alerts","max-height","border-style","alert-style","re-com.util/deref-or-value","re-com.box/box","re-com.box/border","re-com.box/scroller","re-com.box/v-box","iter__4622__auto__","s__34436","cljs.core/LazySeq","temp__5753__auto__","cljs.core/chunked-seq?","c__4620__auto__","size__4621__auto__","cljs.core/count","b__34438","cljs.core/chunk-buffer","i__34437","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__34435","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","alert","map__34441","map__34443","cljs.core/chunk-first"],"sourcesContent":["(ns re-com.alert\n  (:require-macros [re-com.core :refer [handler-fn]])\n  (:require [re-com.util         :refer [deref-or-value]]\n            [re-com.buttons      :refer [button]]\n            [re-com.close-button :refer [close-button]]\n            [re-com.box          :refer [h-box v-box box scroller border flex-child-style]]\n            [re-com.validate     :refer [string-or-hiccup? alert-type? alert-types-list\n                                         vector-of-maps? css-style? html-attr?] :refer-macros [validate-args-macro]]))\n\n;;--------------------------------------------------------------------------------------------------\n;; Component: alert\n;;--------------------------------------------------------------------------------------------------\n\n(def alert-box-args-desc\n  [{:name :id         :required false                 :type \"anything\"                                       :description [:span \"a unique identifier, usually an integer or string.\"]}\n   {:name :alert-type :required false :default :info  :type \"keyword\"         :validate-fn alert-type?       :description [:span \"one of \" alert-types-list]}\n   {:name :heading    :required false                 :type \"string | hiccup\" :validate-fn string-or-hiccup? :description [:span \"displayed as a larger heading. One of \" [:code \":heading\"] \" or \" [:code \":body\"] \" should be provided\"]}\n   {:name :body       :required false                 :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"displayed within the body of the alert\"}\n   {:name :padding    :required false :default \"15px\" :type \"string\"          :validate-fn string?           :description \"padding surounding the alert\"}\n   {:name :closeable? :required false :default false  :type \"boolean\"                                        :description [:span \"if true, render a close button. \" [:code \":on-close\"] \" should be supplied\"]}\n   {:name :on-close   :required false                 :type \":id -> nil\"      :validate-fn fn?               :description [:span \"called when the user clicks the close 'X' button. Passed the \" [:code \":id\"] \" of the alert to close\"]}\n   {:name :class      :required false                 :type \"string\"          :validate-fn string?           :description \"CSS class names, space separated (applies to the outer container)\"}\n   {:name :style      :required false                 :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles to add or override (applies to the outer container)\"}\n   {:name :attr       :required false                 :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the outer container)\"]}])\n\n(defn alert-box\n  \"Displays one alert box. A close button allows the message to be removed\"\n  [& {:keys [id alert-type heading body padding closeable? on-close class style attr]\n      :or   {alert-type :info}\n      :as   args}]\n  {:pre [(validate-args-macro alert-box-args-desc args \"alert-box\")]}\n  (let [close-alert  [close-button\n                      :on-click  #(on-close id)\n                      :div-size  20\n                      :font-size 20]\n        alert-class  (alert-type {:none           \"\"\n                                  :info           \"alert-success\"\n                                  :warning        \"alert-warning\"\n                                  :danger         \"alert-danger\"})]\n    [:div\n     (merge {:class (str \"rc-alert alert fade in \" alert-class \" \" class)\n             :style (merge (flex-child-style \"none\")\n                           {:padding padding}\n                           style)}\n            attr)\n     (when heading\n       [h-box\n        :justify  :between\n        :align    :center\n        :style    {:margin-bottom (if body \"10px\" \"0px\")}\n        :children [[:h4\n                    {:style {:margin-bottom \"0px\"}} ;; Override h4\n                    heading]\n                   (when (and closeable? on-close)\n                     close-alert)]])\n     (when body\n       [h-box\n        :justify  :between\n        :align    :center\n        :children [[:div body]\n                   (when (and (not heading) closeable? on-close)\n                     close-alert)]])]))\n\n;;--------------------------------------------------------------------------------------------------\n;; Component: alert-list\n;;--------------------------------------------------------------------------------------------------\n\n(def alert-list-args-desc\n  [{:name :alerts       :required true                                 :type \"vector of maps | atom\" :validate-fn vector-of-maps? :description \"alerts to render (in the order supplied). Can also be a list of maps\"}\n   {:name :on-close     :required true                                 :type \":id -> nil\"            :validate-fn fn?             :description [:span \"called when the user clicks the close 'X' button. Passed the alert's \" [:code \":id\"]]}\n   {:name :max-height   :required false                                :type \"string\"                :validate-fn string?         :description \"CSS style for maximum list height. By default, it grows forever\"}\n   {:name :padding      :required false :default \"4px\"                 :type \"string\"                :validate-fn string?         :description \"CSS padding within the alert\"}\n   {:name :border-style :required false :default \"1px solid lightgrey\" :type \"string\"                :validate-fn string?         :description \"CSS border style surrounding the list\"}\n   {:name :alert-class  :required false                                :type \"string\"                :validate-fn string?         :description \"CSS class names, space separated (applies to each alert-box component)\"}\n   {:name :alert-style  :required false                                :type \"CSS style map\"         :validate-fn css-style?      :description \"CSS styles (applies to each alert-box component)\"}\n   {:name :class        :required false                                :type \"string\"                :validate-fn string?         :description \"CSS class names, space separated (applies to the outer container)\"}\n   {:name :style        :required false                                :type \"CSS style map\"         :validate-fn css-style?      :description \"CSS styles to add or override (applies to the outer container)\"}\n   {:name :attr         :required false                                :type \"HTML attr map\"         :validate-fn html-attr?      :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the outer container)\"]}])\n\n(defn alert-list\n  \"Displays a list of alert-box components in a v-box. Sample alerts object:\n     [{:id 2\n       :alert-type :warning\n       :heading \\\"Heading\\\"\n       :body \\\"Body\\\"\n       :padding \\\"8px\\\"\n       :closeable? true}\n      {:id 1\n       :alert-type :info\n       :heading \\\"Heading\\\"\n       :body \\\"Body\\\"}]\"\n  [& {:keys [alerts on-close max-height padding border-style alert-class alert-style class style attr]\n      :or   {padding \"4px\"}\n      :as   args}]\n  {:pre [(validate-args-macro alert-list-args-desc args \"alert-list\")]}\n  (let [alerts (deref-or-value alerts)]\n    [box\n     :child [border\n             :class   (str \"rc-alert-list \" class)\n             :style   style\n             :attr    attr\n             :padding padding\n             :border  border-style\n             :child   [scroller\n                       :v-scroll :auto\n                       :style    {:max-height max-height}\n                       :child    [v-box\n                                  :size     \"auto\"\n                                  :children [(for [alert alerts]\n                                               (let [{:keys [id alert-type heading body padding closeable?]} alert]\n                                                 ^{:key id} [alert-box\n                                                             :id         id\n                                                             :alert-type alert-type\n                                                             :heading    heading\n                                                             :body       body\n                                                             :padding    padding\n                                                             :closeable? closeable?\n                                                             :on-close   on-close\n                                                             :class      alert-class\n                                                             :style      alert-style]))]]]]]))\n"]}